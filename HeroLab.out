Grammar:

Rule 0     S' -> script
Rule 1     script -> script_ends_stmt
Rule 2     script -> script_ends_nl
Rule 3     script_ends_nl -> script_ends_stmt NEWLINE
Rule 4     script_ends_nl -> script_ends_nl NEWLINE
Rule 5     script_ends_nl -> <empty>
Rule 6     script_ends_stmt -> script_ends_nl statement
Rule 7     statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat
Rule 8     _1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items
Rule 9     _1_statement_NEWLINE_repeat -> <empty>
Rule 10    _1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item
Rule 11    _1_statement_NEWLINE_items -> _1_statement_NEWLINE_item
Rule 12    _1_statement_NEWLINE_item -> statement NEWLINE
Rule 13    statement -> done_statement
Rule 14    statement -> perform_statement
Rule 15    statement -> append_statement
Rule 16    statement -> trustme_statement
Rule 17    statement -> debug_statement
Rule 18    statement -> notify_statement
Rule 19    statement -> foreach_statement
Rule 20    statement -> while_statement
Rule 21    statement -> for_statement
Rule 22    statement -> doneif_statement
Rule 23    statement -> binop_assign
Rule 24    statement -> goto_statement
Rule 25    statement -> if_statement
Rule 26    statement -> assignment
Rule 27    statement -> declaration
Rule 28    statement -> label
Rule 29    statement -> comment
Rule 30    comment -> COMMENT
Rule 31    id_or_integer -> INTEGER
Rule 32    id_or_integer -> ID
Rule 33    label -> id_or_integer COLON
Rule 34    declaration -> VAR id_or_integer AS STRING
Rule 35    declaration -> VAR id_or_integer AS NUMBER
Rule 36    assignment -> reference EQUAL error
Rule 37    assignment -> reference EQUAL expression
Rule 38    expression -> SPEC_SYMBOL
Rule 39    expression -> SCONST
Rule 40    expression -> FLOAT
Rule 41    expression -> id_or_integer
Rule 42    expression -> MINUS expression  [precedence=right, level=4]
Rule 43    expression -> LPAREN expression RPAREN
Rule 44    expression -> expression CONCAT expression  [precedence=left, level=3]
Rule 45    expression -> expression MOD expression  [precedence=left, level=2]
Rule 46    expression -> expression DIVIDE expression  [precedence=left, level=2]
Rule 47    expression -> expression TIMES expression  [precedence=left, level=2]
Rule 48    expression -> expression MINUS expression  [precedence=left, level=1]
Rule 49    expression -> expression PLUS expression  [precedence=left, level=1]
Rule 50    reference -> id_or_integer
Rule 51    reference -> field_ref
Rule 52    field_ref -> id_or_integer dotexpr
Rule 53    field_ref -> THIS dotexpr
Rule 54    dotexpr -> DOT transition
Rule 55    transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr
Rule 56    transition -> id_or_integer dotexpr
Rule 57    transition -> id_or_integer LSQUARE paramlist RSQUARE
Rule 58    transition -> id_or_integer
Rule 59    paramlist -> expression _2_COMMA_expression_repeat
Rule 60    _2_COMMA_expression_repeat -> _2_COMMA_expression_items
Rule 61    _2_COMMA_expression_repeat -> <empty>
Rule 62    _2_COMMA_expression_items -> _2_COMMA_expression_items _2_COMMA_expression_item
Rule 63    _2_COMMA_expression_items -> _2_COMMA_expression_item
Rule 64    _2_COMMA_expression_item -> COMMA expression
Rule 65    expr_comp -> expression EQUAL expression
Rule 66    expr_comp -> expression NE expression
Rule 67    expr_comp -> expression GE expression
Rule 68    expr_comp -> expression GT expression
Rule 69    expr_comp -> expression LE expression
Rule 70    expr_comp -> expression LT expression
Rule 71    binop_assign -> reference CONCATEQUAL expression
Rule 72    binop_assign -> reference MODEQUAL expression
Rule 73    binop_assign -> reference DIVIDEEQUAL expression
Rule 74    binop_assign -> reference TIMESEQUAL expression
Rule 75    binop_assign -> reference MINUSEQUAL expression
Rule 76    binop_assign -> reference PLUSEQUAL expression
Rule 77    goto_statement -> GOTO id_or_integer
Rule 78    if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
Rule 79    _3_elsif_statement_repeat -> _3_elsif_statement_items
Rule 80    _3_elsif_statement_repeat -> <empty>
Rule 81    _3_elsif_statement_items -> _3_elsif_statement_items _3_elsif_statement_item
Rule 82    _3_elsif_statement_items -> _3_elsif_statement_item
Rule 83    _3_elsif_statement_item -> elsif_statement
Rule 84    optional_else -> _4_ELSE_NEWLINE_statement_set_optional
Rule 85    _4_ELSE_NEWLINE_statement_set_optional -> ELSE NEWLINE statement_set
Rule 86    _4_ELSE_NEWLINE_statement_set_optional -> <empty>
Rule 87    elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set
Rule 88    while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
Rule 89    for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
Rule 90    doneif_statement -> DONEIF LPAREN expr_comp RPAREN
Rule 91    perform_statement -> PERFORM field_ref
Rule 92    append_statement -> APPEND expression
Rule 93    trustme_statement -> TRUSTME
Rule 94    done_statement -> DONE
Rule 95    notify_statement -> NOTIFY expression
Rule 96    debug_statement -> DEBUG expression
Rule 97    foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
Rule 98    _5_where_clause_optional -> where_clause
Rule 99    _5_where_clause_optional -> <empty>
Rule 100   _6_sortas_clause_optional -> sortas_clause
Rule 101   _6_sortas_clause_optional -> <empty>
Rule 102   foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
Rule 103   _7_where_clause_optional -> where_clause
Rule 104   _7_where_clause_optional -> <empty>
Rule 105   _8_sortas_clause_optional -> sortas_clause
Rule 106   _8_sortas_clause_optional -> <empty>
Rule 107   foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
Rule 108   _9_where_clause_optional -> where_clause
Rule 109   _9_where_clause_optional -> <empty>
Rule 110   _10_sortas_clause_optional -> sortas_clause
Rule 111   _10_sortas_clause_optional -> <empty>
Rule 112   foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
Rule 113   _11_where_clause_optional -> where_clause
Rule 114   _11_where_clause_optional -> <empty>
Rule 115   _12_sortas_clause_optional -> sortas_clause
Rule 116   _12_sortas_clause_optional -> <empty>
Rule 117   foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
Rule 118   _13_where_clause_optional -> where_clause
Rule 119   _13_where_clause_optional -> <empty>
Rule 120   _14_sortas_clause_optional -> sortas_clause
Rule 121   _14_sortas_clause_optional -> <empty>
Rule 122   where_clause -> WHERE tag_expression
Rule 123   sortas_clause -> SORTAS id_or_integer
Rule 124   tag_template -> id_or_integer DOT TAG
Rule 125   tag_simple_term -> tag_template
Rule 126   tag_simple_term -> FALSE
Rule 127   tag_simple_term -> TRUE
Rule 128   tag_expression -> tag_simple_term

Unused terminals:

    EACHPICK
    REFERENCE
    EACHTHING
    FIELDVAL
    QUESTION
    HIGH
    VAL
    COUNT
    NOT
    TRANSITION
    MACRO
    XOR
    PERCENT
    OR
    LOW

Terminals, with rules where they appear:

ACTOR                : 97
APPEND               : 92
AS                   : 34 35
BOOTSTRAP            : 102 107
COLON                : 33
COMMA                : 64
COMMENT              : 30
CONCAT               : 44
CONCATEQUAL          : 71
COUNT                : 
DEBUG                : 96
DIVIDE               : 46
DIVIDEEQUAL          : 73
DONE                 : 94
DONEIF               : 90
DOT                  : 54 124
EACHPICK             : 
EACHTHING            : 
ELSE                 : 85
ELSIF                : 87
ENDIF                : 78
EQUAL                : 36 37 65 89
FALSE                : 126
FIELDVAL             : 
FLOAT                : 40
FOR                  : 89
FOREACH              : 97 102 107 112 117
GE                   : 67
GOTO                 : 77
GT                   : 68
HIGH                 : 
ID                   : 32
IF                   : 78
IN                   : 97 102 107 112 117
INTEGER              : 31
LE                   : 69
LOOP                 : 88
LOW                  : 
LPAREN               : 43 78 87 88 90
LSQUARE              : 55 57
LT                   : 70
MACRO                : 
MINUS                : 42 48
MINUSEQUAL           : 75
MOD                  : 45
MODEQUAL             : 72
NE                   : 66
NEWLINE              : 3 4 7 12 78 85 87 88 89 97 102 107 112 117
NEXT                 : 89
NEXTEACH             : 97 102 107 112 117
NOT                  : 
NOTIFY               : 95
NUMBER               : 35
OR                   : 
PERCENT              : 
PERFORM              : 91
PICK                 : 117
PLUS                 : 49
PLUSEQUAL            : 76
PORTFOLIO            : 97
QUESTION             : 
REFERENCE            : 
RPAREN               : 43 78 87 88 90
RSQUARE              : 55 57
SCONST               : 39
SORTAS               : 123
SPEC_SYMBOL          : 38
STRING               : 34
TAG                  : 124
THEN                 : 78 87
THING                : 112
THIS                 : 53 107
TIMES                : 47
TIMESEQUAL           : 74
TO                   : 89
TRANSITION           : 
TRUE                 : 127
TRUSTME              : 93
VAL                  : 
VAR                  : 34 35
WHERE                : 122
WHILE                : 88
XOR                  : 
error                : 36

Nonterminals, with rules where they appear:

_10_sortas_clause_optional : 107
_11_where_clause_optional : 112
_12_sortas_clause_optional : 112
_13_where_clause_optional : 117
_14_sortas_clause_optional : 117
_1_statement_NEWLINE_item : 10 11
_1_statement_NEWLINE_items : 8 10
_1_statement_NEWLINE_repeat : 7
_2_COMMA_expression_item : 62 63
_2_COMMA_expression_items : 60 62
_2_COMMA_expression_repeat : 59
_3_elsif_statement_item : 81 82
_3_elsif_statement_items : 79 81
_3_elsif_statement_repeat : 78
_4_ELSE_NEWLINE_statement_set_optional : 84
_5_where_clause_optional : 97
_6_sortas_clause_optional : 97
_7_where_clause_optional : 102
_8_sortas_clause_optional : 102
_9_where_clause_optional : 107
append_statement     : 15
assignment           : 26
binop_assign         : 23
comment              : 29
debug_statement      : 17
declaration          : 27
done_statement       : 13
doneif_statement     : 22
dotexpr              : 52 53 55 56
elsif_statement      : 83
expr_comp            : 78 87 88 90
expression           : 37 42 43 44 44 45 45 46 46 47 47 48 48 49 49 59 64 65 65 66 66 67 67 68 68 69 69 70 70 71 72 73 74 75 76 89 89 92 95 96
field_ref            : 51 91
for_statement        : 21
foreach_statement    : 19
goto_statement       : 24
id_or_integer        : 33 34 35 41 50 52 55 56 57 58 77 89 102 112 117 123 124
if_statement         : 25
label                : 28
notify_statement     : 18
optional_else        : 78
paramlist            : 55 57
perform_statement    : 14
reference            : 36 37 71 72 73 74 75 76
script               : 0
script_ends_nl       : 2 4 6
script_ends_stmt     : 1 3
sortas_clause        : 100 105 110 115 120
statement            : 6 7 12
statement_set        : 78 85 87 88 89 97 102 107 112 117
tag_expression       : 122
tag_simple_term      : 128
tag_template         : 125
transition           : 54
trustme_statement    : 16
where_clause         : 98 103 108 113 118
while_statement      : 20


state 0

    (0) S' -> . script
    (1) script -> . script_ends_stmt
    (2) script -> . script_ends_nl
    (6) script_ends_stmt -> . script_ends_nl statement
    (3) script_ends_nl -> . script_ends_stmt NEWLINE
    (4) script_ends_nl -> . script_ends_nl NEWLINE
    (5) script_ends_nl -> .
    NEWLINE         reduce using rule 5 (script_ends_nl -> .)
    DONE            reduce using rule 5 (script_ends_nl -> .)
    PERFORM         reduce using rule 5 (script_ends_nl -> .)
    APPEND          reduce using rule 5 (script_ends_nl -> .)
    TRUSTME         reduce using rule 5 (script_ends_nl -> .)
    DEBUG           reduce using rule 5 (script_ends_nl -> .)
    NOTIFY          reduce using rule 5 (script_ends_nl -> .)
    FOREACH         reduce using rule 5 (script_ends_nl -> .)
    WHILE           reduce using rule 5 (script_ends_nl -> .)
    FOR             reduce using rule 5 (script_ends_nl -> .)
    DONEIF          reduce using rule 5 (script_ends_nl -> .)
    GOTO            reduce using rule 5 (script_ends_nl -> .)
    IF              reduce using rule 5 (script_ends_nl -> .)
    VAR             reduce using rule 5 (script_ends_nl -> .)
    COMMENT         reduce using rule 5 (script_ends_nl -> .)
    INTEGER         reduce using rule 5 (script_ends_nl -> .)
    ID              reduce using rule 5 (script_ends_nl -> .)
    THIS            reduce using rule 5 (script_ends_nl -> .)
    $end            reduce using rule 5 (script_ends_nl -> .)

    script                         shift and go to state 1
    script_ends_stmt               shift and go to state 2
    script_ends_nl                 shift and go to state 3

state 1

    (0) S' -> script .


state 2

    (1) script -> script_ends_stmt .
    (3) script_ends_nl -> script_ends_stmt . NEWLINE
    $end            reduce using rule 1 (script -> script_ends_stmt .)
    NEWLINE         shift and go to state 4


state 3

    (2) script -> script_ends_nl .
    (6) script_ends_stmt -> script_ends_nl . statement
    (4) script_ends_nl -> script_ends_nl . NEWLINE
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    $end            reduce using rule 2 (script -> script_ends_nl .)
    NEWLINE         shift and go to state 6
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement                      shift and go to state 5
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 4

    (3) script_ends_nl -> script_ends_stmt NEWLINE .
    NEWLINE         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    DONE            reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    PERFORM         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    APPEND          reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    TRUSTME         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    DEBUG           reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    NOTIFY          reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    FOREACH         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    WHILE           reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    FOR             reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    DONEIF          reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    GOTO            reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    IF              reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    VAR             reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    COMMENT         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    INTEGER         reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    ID              reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    THIS            reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)
    $end            reduce using rule 3 (script_ends_nl -> script_ends_stmt NEWLINE .)


state 5

    (6) script_ends_stmt -> script_ends_nl statement .
    NEWLINE         reduce using rule 6 (script_ends_stmt -> script_ends_nl statement .)
    $end            reduce using rule 6 (script_ends_stmt -> script_ends_nl statement .)


state 6

    (4) script_ends_nl -> script_ends_nl NEWLINE .
    NEWLINE         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    DONE            reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    PERFORM         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    APPEND          reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    TRUSTME         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    DEBUG           reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    NOTIFY          reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    FOREACH         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    WHILE           reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    FOR             reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    DONEIF          reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    GOTO            reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    IF              reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    VAR             reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    COMMENT         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    INTEGER         reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    ID              reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    THIS            reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)
    $end            reduce using rule 4 (script_ends_nl -> script_ends_nl NEWLINE .)


state 7

    (13) statement -> done_statement .
    NEWLINE         reduce using rule 13 (statement -> done_statement .)
    $end            reduce using rule 13 (statement -> done_statement .)


state 8

    (14) statement -> perform_statement .
    NEWLINE         reduce using rule 14 (statement -> perform_statement .)
    $end            reduce using rule 14 (statement -> perform_statement .)


state 9

    (15) statement -> append_statement .
    NEWLINE         reduce using rule 15 (statement -> append_statement .)
    $end            reduce using rule 15 (statement -> append_statement .)


state 10

    (16) statement -> trustme_statement .
    NEWLINE         reduce using rule 16 (statement -> trustme_statement .)
    $end            reduce using rule 16 (statement -> trustme_statement .)


state 11

    (17) statement -> debug_statement .
    NEWLINE         reduce using rule 17 (statement -> debug_statement .)
    $end            reduce using rule 17 (statement -> debug_statement .)


state 12

    (18) statement -> notify_statement .
    NEWLINE         reduce using rule 18 (statement -> notify_statement .)
    $end            reduce using rule 18 (statement -> notify_statement .)


state 13

    (19) statement -> foreach_statement .
    NEWLINE         reduce using rule 19 (statement -> foreach_statement .)
    $end            reduce using rule 19 (statement -> foreach_statement .)


state 14

    (20) statement -> while_statement .
    NEWLINE         reduce using rule 20 (statement -> while_statement .)
    $end            reduce using rule 20 (statement -> while_statement .)


state 15

    (21) statement -> for_statement .
    NEWLINE         reduce using rule 21 (statement -> for_statement .)
    $end            reduce using rule 21 (statement -> for_statement .)


state 16

    (22) statement -> doneif_statement .
    NEWLINE         reduce using rule 22 (statement -> doneif_statement .)
    $end            reduce using rule 22 (statement -> doneif_statement .)


state 17

    (23) statement -> binop_assign .
    NEWLINE         reduce using rule 23 (statement -> binop_assign .)
    $end            reduce using rule 23 (statement -> binop_assign .)


state 18

    (24) statement -> goto_statement .
    NEWLINE         reduce using rule 24 (statement -> goto_statement .)
    $end            reduce using rule 24 (statement -> goto_statement .)


state 19

    (25) statement -> if_statement .
    NEWLINE         reduce using rule 25 (statement -> if_statement .)
    $end            reduce using rule 25 (statement -> if_statement .)


state 20

    (26) statement -> assignment .
    NEWLINE         reduce using rule 26 (statement -> assignment .)
    $end            reduce using rule 26 (statement -> assignment .)


state 21

    (27) statement -> declaration .
    NEWLINE         reduce using rule 27 (statement -> declaration .)
    $end            reduce using rule 27 (statement -> declaration .)


state 22

    (28) statement -> label .
    NEWLINE         reduce using rule 28 (statement -> label .)
    $end            reduce using rule 28 (statement -> label .)


state 23

    (29) statement -> comment .
    NEWLINE         reduce using rule 29 (statement -> comment .)
    $end            reduce using rule 29 (statement -> comment .)


state 24

    (94) done_statement -> DONE .
    NEWLINE         reduce using rule 94 (done_statement -> DONE .)
    $end            reduce using rule 94 (done_statement -> DONE .)


state 25

    (91) perform_statement -> PERFORM . field_ref
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    THIS            shift and go to state 33
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    field_ref                      shift and go to state 44
    id_or_integer                  shift and go to state 45

state 26

    (51) reference -> field_ref .
    CONCATEQUAL     reduce using rule 51 (reference -> field_ref .)
    MODEQUAL        reduce using rule 51 (reference -> field_ref .)
    DIVIDEEQUAL     reduce using rule 51 (reference -> field_ref .)
    TIMESEQUAL      reduce using rule 51 (reference -> field_ref .)
    MINUSEQUAL      reduce using rule 51 (reference -> field_ref .)
    PLUSEQUAL       reduce using rule 51 (reference -> field_ref .)
    EQUAL           reduce using rule 51 (reference -> field_ref .)


state 27

    (92) append_statement -> APPEND . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 46
    id_or_integer                  shift and go to state 50

state 28

    (93) trustme_statement -> TRUSTME .
    NEWLINE         reduce using rule 93 (trustme_statement -> TRUSTME .)
    $end            reduce using rule 93 (trustme_statement -> TRUSTME .)


state 29

    (96) debug_statement -> DEBUG . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 53
    id_or_integer                  shift and go to state 50

state 30

    (95) notify_statement -> NOTIFY . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 54
    id_or_integer                  shift and go to state 50

state 31

    (97) foreach_statement -> FOREACH . ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> FOREACH . BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> FOREACH . BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> FOREACH . THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> FOREACH . PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    ACTOR           shift and go to state 55
    BOOTSTRAP       shift and go to state 56
    THING           shift and go to state 57
    PICK            shift and go to state 58


state 32

    (33) label -> id_or_integer . COLON
    (50) reference -> id_or_integer .
    (52) field_ref -> id_or_integer . dotexpr
    (54) dotexpr -> . DOT transition
    COLON           shift and go to state 59
    CONCATEQUAL     reduce using rule 50 (reference -> id_or_integer .)
    MODEQUAL        reduce using rule 50 (reference -> id_or_integer .)
    DIVIDEEQUAL     reduce using rule 50 (reference -> id_or_integer .)
    TIMESEQUAL      reduce using rule 50 (reference -> id_or_integer .)
    MINUSEQUAL      reduce using rule 50 (reference -> id_or_integer .)
    PLUSEQUAL       reduce using rule 50 (reference -> id_or_integer .)
    EQUAL           reduce using rule 50 (reference -> id_or_integer .)
    DOT             shift and go to state 61

    dotexpr                        shift and go to state 60

state 33

    (53) field_ref -> THIS . dotexpr
    (54) dotexpr -> . DOT transition
    DOT             shift and go to state 61

    dotexpr                        shift and go to state 62

state 34

    (88) while_statement -> WHILE . LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    LPAREN          shift and go to state 63


state 35

    (89) for_statement -> FOR . id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 64

state 36

    (90) doneif_statement -> DONEIF . LPAREN expr_comp RPAREN
    LPAREN          shift and go to state 65


state 37

    (71) binop_assign -> reference . CONCATEQUAL expression
    (72) binop_assign -> reference . MODEQUAL expression
    (73) binop_assign -> reference . DIVIDEEQUAL expression
    (74) binop_assign -> reference . TIMESEQUAL expression
    (75) binop_assign -> reference . MINUSEQUAL expression
    (76) binop_assign -> reference . PLUSEQUAL expression
    (36) assignment -> reference . EQUAL error
    (37) assignment -> reference . EQUAL expression
    CONCATEQUAL     shift and go to state 66
    MODEQUAL        shift and go to state 67
    DIVIDEEQUAL     shift and go to state 68
    TIMESEQUAL      shift and go to state 69
    MINUSEQUAL      shift and go to state 70
    PLUSEQUAL       shift and go to state 71
    EQUAL           shift and go to state 72


state 38

    (77) goto_statement -> GOTO . id_or_integer
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 73

state 39

    (78) if_statement -> IF . LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    LPAREN          shift and go to state 74


state 40

    (34) declaration -> VAR . id_or_integer AS STRING
    (35) declaration -> VAR . id_or_integer AS NUMBER
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 75

state 41

    (30) comment -> COMMENT .
    NEWLINE         reduce using rule 30 (comment -> COMMENT .)
    $end            reduce using rule 30 (comment -> COMMENT .)


state 42

    (31) id_or_integer -> INTEGER .
    COLON           reduce using rule 31 (id_or_integer -> INTEGER .)
    DOT             reduce using rule 31 (id_or_integer -> INTEGER .)
    CONCATEQUAL     reduce using rule 31 (id_or_integer -> INTEGER .)
    MODEQUAL        reduce using rule 31 (id_or_integer -> INTEGER .)
    DIVIDEEQUAL     reduce using rule 31 (id_or_integer -> INTEGER .)
    TIMESEQUAL      reduce using rule 31 (id_or_integer -> INTEGER .)
    MINUSEQUAL      reduce using rule 31 (id_or_integer -> INTEGER .)
    PLUSEQUAL       reduce using rule 31 (id_or_integer -> INTEGER .)
    EQUAL           reduce using rule 31 (id_or_integer -> INTEGER .)
    CONCAT          reduce using rule 31 (id_or_integer -> INTEGER .)
    MOD             reduce using rule 31 (id_or_integer -> INTEGER .)
    DIVIDE          reduce using rule 31 (id_or_integer -> INTEGER .)
    TIMES           reduce using rule 31 (id_or_integer -> INTEGER .)
    MINUS           reduce using rule 31 (id_or_integer -> INTEGER .)
    PLUS            reduce using rule 31 (id_or_integer -> INTEGER .)
    NEWLINE         reduce using rule 31 (id_or_integer -> INTEGER .)
    $end            reduce using rule 31 (id_or_integer -> INTEGER .)
    AS              reduce using rule 31 (id_or_integer -> INTEGER .)
    RPAREN          reduce using rule 31 (id_or_integer -> INTEGER .)
    NE              reduce using rule 31 (id_or_integer -> INTEGER .)
    GE              reduce using rule 31 (id_or_integer -> INTEGER .)
    GT              reduce using rule 31 (id_or_integer -> INTEGER .)
    LE              reduce using rule 31 (id_or_integer -> INTEGER .)
    LT              reduce using rule 31 (id_or_integer -> INTEGER .)
    TO              reduce using rule 31 (id_or_integer -> INTEGER .)
    COMMA           reduce using rule 31 (id_or_integer -> INTEGER .)
    RSQUARE         reduce using rule 31 (id_or_integer -> INTEGER .)
    LSQUARE         reduce using rule 31 (id_or_integer -> INTEGER .)
    WHERE           reduce using rule 31 (id_or_integer -> INTEGER .)
    SORTAS          reduce using rule 31 (id_or_integer -> INTEGER .)


state 43

    (32) id_or_integer -> ID .
    COLON           reduce using rule 32 (id_or_integer -> ID .)
    DOT             reduce using rule 32 (id_or_integer -> ID .)
    CONCATEQUAL     reduce using rule 32 (id_or_integer -> ID .)
    MODEQUAL        reduce using rule 32 (id_or_integer -> ID .)
    DIVIDEEQUAL     reduce using rule 32 (id_or_integer -> ID .)
    TIMESEQUAL      reduce using rule 32 (id_or_integer -> ID .)
    MINUSEQUAL      reduce using rule 32 (id_or_integer -> ID .)
    PLUSEQUAL       reduce using rule 32 (id_or_integer -> ID .)
    EQUAL           reduce using rule 32 (id_or_integer -> ID .)
    CONCAT          reduce using rule 32 (id_or_integer -> ID .)
    MOD             reduce using rule 32 (id_or_integer -> ID .)
    DIVIDE          reduce using rule 32 (id_or_integer -> ID .)
    TIMES           reduce using rule 32 (id_or_integer -> ID .)
    MINUS           reduce using rule 32 (id_or_integer -> ID .)
    PLUS            reduce using rule 32 (id_or_integer -> ID .)
    NEWLINE         reduce using rule 32 (id_or_integer -> ID .)
    $end            reduce using rule 32 (id_or_integer -> ID .)
    AS              reduce using rule 32 (id_or_integer -> ID .)
    RPAREN          reduce using rule 32 (id_or_integer -> ID .)
    NE              reduce using rule 32 (id_or_integer -> ID .)
    GE              reduce using rule 32 (id_or_integer -> ID .)
    GT              reduce using rule 32 (id_or_integer -> ID .)
    LE              reduce using rule 32 (id_or_integer -> ID .)
    LT              reduce using rule 32 (id_or_integer -> ID .)
    TO              reduce using rule 32 (id_or_integer -> ID .)
    COMMA           reduce using rule 32 (id_or_integer -> ID .)
    RSQUARE         reduce using rule 32 (id_or_integer -> ID .)
    LSQUARE         reduce using rule 32 (id_or_integer -> ID .)
    WHERE           reduce using rule 32 (id_or_integer -> ID .)
    SORTAS          reduce using rule 32 (id_or_integer -> ID .)


state 44

    (91) perform_statement -> PERFORM field_ref .
    NEWLINE         reduce using rule 91 (perform_statement -> PERFORM field_ref .)
    $end            reduce using rule 91 (perform_statement -> PERFORM field_ref .)


state 45

    (52) field_ref -> id_or_integer . dotexpr
    (54) dotexpr -> . DOT transition
    DOT             shift and go to state 61

    dotexpr                        shift and go to state 60

state 46

    (92) append_statement -> APPEND expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 92 (append_statement -> APPEND expression .)
    $end            reduce using rule 92 (append_statement -> APPEND expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 47

    (38) expression -> SPEC_SYMBOL .
    CONCAT          reduce using rule 38 (expression -> SPEC_SYMBOL .)
    MOD             reduce using rule 38 (expression -> SPEC_SYMBOL .)
    DIVIDE          reduce using rule 38 (expression -> SPEC_SYMBOL .)
    TIMES           reduce using rule 38 (expression -> SPEC_SYMBOL .)
    MINUS           reduce using rule 38 (expression -> SPEC_SYMBOL .)
    PLUS            reduce using rule 38 (expression -> SPEC_SYMBOL .)
    NEWLINE         reduce using rule 38 (expression -> SPEC_SYMBOL .)
    $end            reduce using rule 38 (expression -> SPEC_SYMBOL .)
    RPAREN          reduce using rule 38 (expression -> SPEC_SYMBOL .)
    EQUAL           reduce using rule 38 (expression -> SPEC_SYMBOL .)
    NE              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    GE              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    GT              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    LE              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    LT              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    TO              reduce using rule 38 (expression -> SPEC_SYMBOL .)
    COMMA           reduce using rule 38 (expression -> SPEC_SYMBOL .)
    RSQUARE         reduce using rule 38 (expression -> SPEC_SYMBOL .)


state 48

    (39) expression -> SCONST .
    CONCAT          reduce using rule 39 (expression -> SCONST .)
    MOD             reduce using rule 39 (expression -> SCONST .)
    DIVIDE          reduce using rule 39 (expression -> SCONST .)
    TIMES           reduce using rule 39 (expression -> SCONST .)
    MINUS           reduce using rule 39 (expression -> SCONST .)
    PLUS            reduce using rule 39 (expression -> SCONST .)
    NEWLINE         reduce using rule 39 (expression -> SCONST .)
    $end            reduce using rule 39 (expression -> SCONST .)
    RPAREN          reduce using rule 39 (expression -> SCONST .)
    EQUAL           reduce using rule 39 (expression -> SCONST .)
    NE              reduce using rule 39 (expression -> SCONST .)
    GE              reduce using rule 39 (expression -> SCONST .)
    GT              reduce using rule 39 (expression -> SCONST .)
    LE              reduce using rule 39 (expression -> SCONST .)
    LT              reduce using rule 39 (expression -> SCONST .)
    TO              reduce using rule 39 (expression -> SCONST .)
    COMMA           reduce using rule 39 (expression -> SCONST .)
    RSQUARE         reduce using rule 39 (expression -> SCONST .)


state 49

    (40) expression -> FLOAT .
    CONCAT          reduce using rule 40 (expression -> FLOAT .)
    MOD             reduce using rule 40 (expression -> FLOAT .)
    DIVIDE          reduce using rule 40 (expression -> FLOAT .)
    TIMES           reduce using rule 40 (expression -> FLOAT .)
    MINUS           reduce using rule 40 (expression -> FLOAT .)
    PLUS            reduce using rule 40 (expression -> FLOAT .)
    NEWLINE         reduce using rule 40 (expression -> FLOAT .)
    $end            reduce using rule 40 (expression -> FLOAT .)
    RPAREN          reduce using rule 40 (expression -> FLOAT .)
    EQUAL           reduce using rule 40 (expression -> FLOAT .)
    NE              reduce using rule 40 (expression -> FLOAT .)
    GE              reduce using rule 40 (expression -> FLOAT .)
    GT              reduce using rule 40 (expression -> FLOAT .)
    LE              reduce using rule 40 (expression -> FLOAT .)
    LT              reduce using rule 40 (expression -> FLOAT .)
    TO              reduce using rule 40 (expression -> FLOAT .)
    COMMA           reduce using rule 40 (expression -> FLOAT .)
    RSQUARE         reduce using rule 40 (expression -> FLOAT .)


state 50

    (41) expression -> id_or_integer .
    CONCAT          reduce using rule 41 (expression -> id_or_integer .)
    MOD             reduce using rule 41 (expression -> id_or_integer .)
    DIVIDE          reduce using rule 41 (expression -> id_or_integer .)
    TIMES           reduce using rule 41 (expression -> id_or_integer .)
    MINUS           reduce using rule 41 (expression -> id_or_integer .)
    PLUS            reduce using rule 41 (expression -> id_or_integer .)
    NEWLINE         reduce using rule 41 (expression -> id_or_integer .)
    $end            reduce using rule 41 (expression -> id_or_integer .)
    RPAREN          reduce using rule 41 (expression -> id_or_integer .)
    EQUAL           reduce using rule 41 (expression -> id_or_integer .)
    NE              reduce using rule 41 (expression -> id_or_integer .)
    GE              reduce using rule 41 (expression -> id_or_integer .)
    GT              reduce using rule 41 (expression -> id_or_integer .)
    LE              reduce using rule 41 (expression -> id_or_integer .)
    LT              reduce using rule 41 (expression -> id_or_integer .)
    TO              reduce using rule 41 (expression -> id_or_integer .)
    COMMA           reduce using rule 41 (expression -> id_or_integer .)
    RSQUARE         reduce using rule 41 (expression -> id_or_integer .)


state 51

    (42) expression -> MINUS . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 82
    id_or_integer                  shift and go to state 50

state 52

    (43) expression -> LPAREN . expression RPAREN
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 83
    id_or_integer                  shift and go to state 50

state 53

    (96) debug_statement -> DEBUG expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 96 (debug_statement -> DEBUG expression .)
    $end            reduce using rule 96 (debug_statement -> DEBUG expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 54

    (95) notify_statement -> NOTIFY expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 95 (notify_statement -> NOTIFY expression .)
    $end            reduce using rule 95 (notify_statement -> NOTIFY expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 55

    (97) foreach_statement -> FOREACH ACTOR . IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    IN              shift and go to state 84


state 56

    (102) foreach_statement -> FOREACH BOOTSTRAP . IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> FOREACH BOOTSTRAP . IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    IN              shift and go to state 85


state 57

    (112) foreach_statement -> FOREACH THING . IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    IN              shift and go to state 86


state 58

    (117) foreach_statement -> FOREACH PICK . IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    IN              shift and go to state 87


state 59

    (33) label -> id_or_integer COLON .
    NEWLINE         reduce using rule 33 (label -> id_or_integer COLON .)
    $end            reduce using rule 33 (label -> id_or_integer COLON .)


state 60

    (52) field_ref -> id_or_integer dotexpr .
    CONCATEQUAL     reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    MODEQUAL        reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    DIVIDEEQUAL     reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    TIMESEQUAL      reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    MINUSEQUAL      reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    PLUSEQUAL       reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    EQUAL           reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    NEWLINE         reduce using rule 52 (field_ref -> id_or_integer dotexpr .)
    $end            reduce using rule 52 (field_ref -> id_or_integer dotexpr .)


state 61

    (54) dotexpr -> DOT . transition
    (55) transition -> . id_or_integer LSQUARE paramlist RSQUARE dotexpr
    (56) transition -> . id_or_integer dotexpr
    (57) transition -> . id_or_integer LSQUARE paramlist RSQUARE
    (58) transition -> . id_or_integer
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    transition                     shift and go to state 88
    id_or_integer                  shift and go to state 89

state 62

    (53) field_ref -> THIS dotexpr .
    CONCATEQUAL     reduce using rule 53 (field_ref -> THIS dotexpr .)
    MODEQUAL        reduce using rule 53 (field_ref -> THIS dotexpr .)
    DIVIDEEQUAL     reduce using rule 53 (field_ref -> THIS dotexpr .)
    TIMESEQUAL      reduce using rule 53 (field_ref -> THIS dotexpr .)
    MINUSEQUAL      reduce using rule 53 (field_ref -> THIS dotexpr .)
    PLUSEQUAL       reduce using rule 53 (field_ref -> THIS dotexpr .)
    EQUAL           reduce using rule 53 (field_ref -> THIS dotexpr .)
    NEWLINE         reduce using rule 53 (field_ref -> THIS dotexpr .)
    $end            reduce using rule 53 (field_ref -> THIS dotexpr .)


state 63

    (88) while_statement -> WHILE LPAREN . expr_comp RPAREN NEWLINE statement_set LOOP
    (65) expr_comp -> . expression EQUAL expression
    (66) expr_comp -> . expression NE expression
    (67) expr_comp -> . expression GE expression
    (68) expr_comp -> . expression GT expression
    (69) expr_comp -> . expression LE expression
    (70) expr_comp -> . expression LT expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expr_comp                      shift and go to state 90
    expression                     shift and go to state 91
    id_or_integer                  shift and go to state 50

state 64

    (89) for_statement -> FOR id_or_integer . EQUAL expression TO expression NEWLINE statement_set NEXT
    EQUAL           shift and go to state 92


state 65

    (90) doneif_statement -> DONEIF LPAREN . expr_comp RPAREN
    (65) expr_comp -> . expression EQUAL expression
    (66) expr_comp -> . expression NE expression
    (67) expr_comp -> . expression GE expression
    (68) expr_comp -> . expression GT expression
    (69) expr_comp -> . expression LE expression
    (70) expr_comp -> . expression LT expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expr_comp                      shift and go to state 93
    expression                     shift and go to state 91
    id_or_integer                  shift and go to state 50

state 66

    (71) binop_assign -> reference CONCATEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 94
    id_or_integer                  shift and go to state 50

state 67

    (72) binop_assign -> reference MODEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 95
    id_or_integer                  shift and go to state 50

state 68

    (73) binop_assign -> reference DIVIDEEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 96
    id_or_integer                  shift and go to state 50

state 69

    (74) binop_assign -> reference TIMESEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 97
    id_or_integer                  shift and go to state 50

state 70

    (75) binop_assign -> reference MINUSEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 98
    id_or_integer                  shift and go to state 50

state 71

    (76) binop_assign -> reference PLUSEQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 99
    id_or_integer                  shift and go to state 50

state 72

    (36) assignment -> reference EQUAL . error
    (37) assignment -> reference EQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    error           shift and go to state 100
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 101
    id_or_integer                  shift and go to state 50

state 73

    (77) goto_statement -> GOTO id_or_integer .
    NEWLINE         reduce using rule 77 (goto_statement -> GOTO id_or_integer .)
    $end            reduce using rule 77 (goto_statement -> GOTO id_or_integer .)


state 74

    (78) if_statement -> IF LPAREN . expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (65) expr_comp -> . expression EQUAL expression
    (66) expr_comp -> . expression NE expression
    (67) expr_comp -> . expression GE expression
    (68) expr_comp -> . expression GT expression
    (69) expr_comp -> . expression LE expression
    (70) expr_comp -> . expression LT expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expr_comp                      shift and go to state 102
    expression                     shift and go to state 91
    id_or_integer                  shift and go to state 50

state 75

    (34) declaration -> VAR id_or_integer . AS STRING
    (35) declaration -> VAR id_or_integer . AS NUMBER
    AS              shift and go to state 103


state 76

    (44) expression -> expression CONCAT . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 104
    id_or_integer                  shift and go to state 50

state 77

    (45) expression -> expression MOD . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 105
    id_or_integer                  shift and go to state 50

state 78

    (46) expression -> expression DIVIDE . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 106
    id_or_integer                  shift and go to state 50

state 79

    (47) expression -> expression TIMES . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 107
    id_or_integer                  shift and go to state 50

state 80

    (48) expression -> expression MINUS . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 108
    id_or_integer                  shift and go to state 50

state 81

    (49) expression -> expression PLUS . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 109
    id_or_integer                  shift and go to state 50

state 82

    (42) expression -> MINUS expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    CONCAT          reduce using rule 42 (expression -> MINUS expression .)
    MOD             reduce using rule 42 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 42 (expression -> MINUS expression .)
    TIMES           reduce using rule 42 (expression -> MINUS expression .)
    MINUS           reduce using rule 42 (expression -> MINUS expression .)
    PLUS            reduce using rule 42 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 42 (expression -> MINUS expression .)
    $end            reduce using rule 42 (expression -> MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> MINUS expression .)
    EQUAL           reduce using rule 42 (expression -> MINUS expression .)
    NE              reduce using rule 42 (expression -> MINUS expression .)
    GE              reduce using rule 42 (expression -> MINUS expression .)
    GT              reduce using rule 42 (expression -> MINUS expression .)
    LE              reduce using rule 42 (expression -> MINUS expression .)
    LT              reduce using rule 42 (expression -> MINUS expression .)
    TO              reduce using rule 42 (expression -> MINUS expression .)
    COMMA           reduce using rule 42 (expression -> MINUS expression .)
    RSQUARE         reduce using rule 42 (expression -> MINUS expression .)


state 83

    (43) expression -> LPAREN expression . RPAREN
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          shift and go to state 110
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 84

    (97) foreach_statement -> FOREACH ACTOR IN . PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    PORTFOLIO       shift and go to state 111


state 85

    (102) foreach_statement -> FOREACH BOOTSTRAP IN . id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> FOREACH BOOTSTRAP IN . THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    THIS            shift and go to state 113
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 112

state 86

    (112) foreach_statement -> FOREACH THING IN . id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 114

state 87

    (117) foreach_statement -> FOREACH PICK IN . id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 115

state 88

    (54) dotexpr -> DOT transition .
    CONCATEQUAL     reduce using rule 54 (dotexpr -> DOT transition .)
    MODEQUAL        reduce using rule 54 (dotexpr -> DOT transition .)
    DIVIDEEQUAL     reduce using rule 54 (dotexpr -> DOT transition .)
    TIMESEQUAL      reduce using rule 54 (dotexpr -> DOT transition .)
    MINUSEQUAL      reduce using rule 54 (dotexpr -> DOT transition .)
    PLUSEQUAL       reduce using rule 54 (dotexpr -> DOT transition .)
    EQUAL           reduce using rule 54 (dotexpr -> DOT transition .)
    NEWLINE         reduce using rule 54 (dotexpr -> DOT transition .)
    $end            reduce using rule 54 (dotexpr -> DOT transition .)


state 89

    (55) transition -> id_or_integer . LSQUARE paramlist RSQUARE dotexpr
    (56) transition -> id_or_integer . dotexpr
    (57) transition -> id_or_integer . LSQUARE paramlist RSQUARE
    (58) transition -> id_or_integer .
    (54) dotexpr -> . DOT transition
    LSQUARE         shift and go to state 116
    CONCATEQUAL     reduce using rule 58 (transition -> id_or_integer .)
    MODEQUAL        reduce using rule 58 (transition -> id_or_integer .)
    DIVIDEEQUAL     reduce using rule 58 (transition -> id_or_integer .)
    TIMESEQUAL      reduce using rule 58 (transition -> id_or_integer .)
    MINUSEQUAL      reduce using rule 58 (transition -> id_or_integer .)
    PLUSEQUAL       reduce using rule 58 (transition -> id_or_integer .)
    EQUAL           reduce using rule 58 (transition -> id_or_integer .)
    NEWLINE         reduce using rule 58 (transition -> id_or_integer .)
    $end            reduce using rule 58 (transition -> id_or_integer .)
    DOT             shift and go to state 61

    dotexpr                        shift and go to state 117

state 90

    (88) while_statement -> WHILE LPAREN expr_comp . RPAREN NEWLINE statement_set LOOP
    RPAREN          shift and go to state 118


state 91

    (65) expr_comp -> expression . EQUAL expression
    (66) expr_comp -> expression . NE expression
    (67) expr_comp -> expression . GE expression
    (68) expr_comp -> expression . GT expression
    (69) expr_comp -> expression . LE expression
    (70) expr_comp -> expression . LT expression
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    EQUAL           shift and go to state 119
    NE              shift and go to state 120
    GE              shift and go to state 121
    GT              shift and go to state 122
    LE              shift and go to state 123
    LT              shift and go to state 124
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 92

    (89) for_statement -> FOR id_or_integer EQUAL . expression TO expression NEWLINE statement_set NEXT
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 50
    expression                     shift and go to state 125

state 93

    (90) doneif_statement -> DONEIF LPAREN expr_comp . RPAREN
    RPAREN          shift and go to state 126


state 94

    (71) binop_assign -> reference CONCATEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 71 (binop_assign -> reference CONCATEQUAL expression .)
    $end            reduce using rule 71 (binop_assign -> reference CONCATEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 95

    (72) binop_assign -> reference MODEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 72 (binop_assign -> reference MODEQUAL expression .)
    $end            reduce using rule 72 (binop_assign -> reference MODEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 96

    (73) binop_assign -> reference DIVIDEEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 73 (binop_assign -> reference DIVIDEEQUAL expression .)
    $end            reduce using rule 73 (binop_assign -> reference DIVIDEEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 97

    (74) binop_assign -> reference TIMESEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 74 (binop_assign -> reference TIMESEQUAL expression .)
    $end            reduce using rule 74 (binop_assign -> reference TIMESEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 98

    (75) binop_assign -> reference MINUSEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 75 (binop_assign -> reference MINUSEQUAL expression .)
    $end            reduce using rule 75 (binop_assign -> reference MINUSEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 99

    (76) binop_assign -> reference PLUSEQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 76 (binop_assign -> reference PLUSEQUAL expression .)
    $end            reduce using rule 76 (binop_assign -> reference PLUSEQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 100

    (36) assignment -> reference EQUAL error .
    NEWLINE         reduce using rule 36 (assignment -> reference EQUAL error .)
    $end            reduce using rule 36 (assignment -> reference EQUAL error .)


state 101

    (37) assignment -> reference EQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         reduce using rule 37 (assignment -> reference EQUAL expression .)
    $end            reduce using rule 37 (assignment -> reference EQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 102

    (78) if_statement -> IF LPAREN expr_comp . RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    RPAREN          shift and go to state 127


state 103

    (34) declaration -> VAR id_or_integer AS . STRING
    (35) declaration -> VAR id_or_integer AS . NUMBER
    STRING          shift and go to state 128
    NUMBER          shift and go to state 129


state 104

    (44) expression -> expression CONCAT expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    CONCAT          reduce using rule 44 (expression -> expression CONCAT expression .)
    MOD             reduce using rule 44 (expression -> expression CONCAT expression .)
    DIVIDE          reduce using rule 44 (expression -> expression CONCAT expression .)
    TIMES           reduce using rule 44 (expression -> expression CONCAT expression .)
    MINUS           reduce using rule 44 (expression -> expression CONCAT expression .)
    PLUS            reduce using rule 44 (expression -> expression CONCAT expression .)
    NEWLINE         reduce using rule 44 (expression -> expression CONCAT expression .)
    $end            reduce using rule 44 (expression -> expression CONCAT expression .)
    RPAREN          reduce using rule 44 (expression -> expression CONCAT expression .)
    EQUAL           reduce using rule 44 (expression -> expression CONCAT expression .)
    NE              reduce using rule 44 (expression -> expression CONCAT expression .)
    GE              reduce using rule 44 (expression -> expression CONCAT expression .)
    GT              reduce using rule 44 (expression -> expression CONCAT expression .)
    LE              reduce using rule 44 (expression -> expression CONCAT expression .)
    LT              reduce using rule 44 (expression -> expression CONCAT expression .)
    TO              reduce using rule 44 (expression -> expression CONCAT expression .)
    COMMA           reduce using rule 44 (expression -> expression CONCAT expression .)
    RSQUARE         reduce using rule 44 (expression -> expression CONCAT expression .)


state 105

    (45) expression -> expression MOD expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    MOD             reduce using rule 45 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 45 (expression -> expression MOD expression .)
    TIMES           reduce using rule 45 (expression -> expression MOD expression .)
    MINUS           reduce using rule 45 (expression -> expression MOD expression .)
    PLUS            reduce using rule 45 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 45 (expression -> expression MOD expression .)
    $end            reduce using rule 45 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 45 (expression -> expression MOD expression .)
    EQUAL           reduce using rule 45 (expression -> expression MOD expression .)
    NE              reduce using rule 45 (expression -> expression MOD expression .)
    GE              reduce using rule 45 (expression -> expression MOD expression .)
    GT              reduce using rule 45 (expression -> expression MOD expression .)
    LE              reduce using rule 45 (expression -> expression MOD expression .)
    LT              reduce using rule 45 (expression -> expression MOD expression .)
    TO              reduce using rule 45 (expression -> expression MOD expression .)
    COMMA           reduce using rule 45 (expression -> expression MOD expression .)
    RSQUARE         reduce using rule 45 (expression -> expression MOD expression .)
    CONCAT          shift and go to state 76


state 106

    (46) expression -> expression DIVIDE expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    MOD             reduce using rule 46 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 46 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 46 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 46 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 46 (expression -> expression DIVIDE expression .)
    NEWLINE         reduce using rule 46 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 46 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 46 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 46 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 46 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 46 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 46 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 46 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 46 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 46 (expression -> expression DIVIDE expression .)
    CONCAT          shift and go to state 76


state 107

    (47) expression -> expression TIMES expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    MOD             reduce using rule 47 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 47 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 47 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 47 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 47 (expression -> expression TIMES expression .)
    NEWLINE         reduce using rule 47 (expression -> expression TIMES expression .)
    $end            reduce using rule 47 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 47 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 47 (expression -> expression TIMES expression .)
    NE              reduce using rule 47 (expression -> expression TIMES expression .)
    GE              reduce using rule 47 (expression -> expression TIMES expression .)
    GT              reduce using rule 47 (expression -> expression TIMES expression .)
    LE              reduce using rule 47 (expression -> expression TIMES expression .)
    LT              reduce using rule 47 (expression -> expression TIMES expression .)
    TO              reduce using rule 47 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 47 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 47 (expression -> expression TIMES expression .)
    CONCAT          shift and go to state 76


state 108

    (48) expression -> expression MINUS expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    MINUS           reduce using rule 48 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 48 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 48 (expression -> expression MINUS expression .)
    $end            reduce using rule 48 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 48 (expression -> expression MINUS expression .)
    NE              reduce using rule 48 (expression -> expression MINUS expression .)
    GE              reduce using rule 48 (expression -> expression MINUS expression .)
    GT              reduce using rule 48 (expression -> expression MINUS expression .)
    LE              reduce using rule 48 (expression -> expression MINUS expression .)
    LT              reduce using rule 48 (expression -> expression MINUS expression .)
    TO              reduce using rule 48 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 48 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 48 (expression -> expression MINUS expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79


state 109

    (49) expression -> expression PLUS expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    MINUS           reduce using rule 49 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 49 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 49 (expression -> expression PLUS expression .)
    $end            reduce using rule 49 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 49 (expression -> expression PLUS expression .)
    NE              reduce using rule 49 (expression -> expression PLUS expression .)
    GE              reduce using rule 49 (expression -> expression PLUS expression .)
    GT              reduce using rule 49 (expression -> expression PLUS expression .)
    LE              reduce using rule 49 (expression -> expression PLUS expression .)
    LT              reduce using rule 49 (expression -> expression PLUS expression .)
    TO              reduce using rule 49 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 49 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 49 (expression -> expression PLUS expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79


state 110

    (43) expression -> LPAREN expression RPAREN .
    CONCAT          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 43 (expression -> LPAREN expression RPAREN .)


state 111

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO . _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (98) _5_where_clause_optional -> . where_clause
    (99) _5_where_clause_optional -> .
    (122) where_clause -> . WHERE tag_expression
    SORTAS          reduce using rule 99 (_5_where_clause_optional -> .)
    NEWLINE         reduce using rule 99 (_5_where_clause_optional -> .)
    WHERE           shift and go to state 132

    _5_where_clause_optional       shift and go to state 130
    where_clause                   shift and go to state 131

state 112

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer . _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (103) _7_where_clause_optional -> . where_clause
    (104) _7_where_clause_optional -> .
    (122) where_clause -> . WHERE tag_expression
    SORTAS          reduce using rule 104 (_7_where_clause_optional -> .)
    NEWLINE         reduce using rule 104 (_7_where_clause_optional -> .)
    WHERE           shift and go to state 132

    _7_where_clause_optional       shift and go to state 133
    where_clause                   shift and go to state 134

state 113

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS . _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (108) _9_where_clause_optional -> . where_clause
    (109) _9_where_clause_optional -> .
    (122) where_clause -> . WHERE tag_expression
    SORTAS          reduce using rule 109 (_9_where_clause_optional -> .)
    NEWLINE         reduce using rule 109 (_9_where_clause_optional -> .)
    WHERE           shift and go to state 132

    _9_where_clause_optional       shift and go to state 135
    where_clause                   shift and go to state 136

state 114

    (112) foreach_statement -> FOREACH THING IN id_or_integer . _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (113) _11_where_clause_optional -> . where_clause
    (114) _11_where_clause_optional -> .
    (122) where_clause -> . WHERE tag_expression
    SORTAS          reduce using rule 114 (_11_where_clause_optional -> .)
    NEWLINE         reduce using rule 114 (_11_where_clause_optional -> .)
    WHERE           shift and go to state 132

    _11_where_clause_optional      shift and go to state 137
    where_clause                   shift and go to state 138

state 115

    (117) foreach_statement -> FOREACH PICK IN id_or_integer . _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (118) _13_where_clause_optional -> . where_clause
    (119) _13_where_clause_optional -> .
    (122) where_clause -> . WHERE tag_expression
    SORTAS          reduce using rule 119 (_13_where_clause_optional -> .)
    NEWLINE         reduce using rule 119 (_13_where_clause_optional -> .)
    WHERE           shift and go to state 132

    _13_where_clause_optional      shift and go to state 139
    where_clause                   shift and go to state 140

state 116

    (55) transition -> id_or_integer LSQUARE . paramlist RSQUARE dotexpr
    (57) transition -> id_or_integer LSQUARE . paramlist RSQUARE
    (59) paramlist -> . expression _2_COMMA_expression_repeat
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 50
    paramlist                      shift and go to state 141
    expression                     shift and go to state 142

state 117

    (56) transition -> id_or_integer dotexpr .
    CONCATEQUAL     reduce using rule 56 (transition -> id_or_integer dotexpr .)
    MODEQUAL        reduce using rule 56 (transition -> id_or_integer dotexpr .)
    DIVIDEEQUAL     reduce using rule 56 (transition -> id_or_integer dotexpr .)
    TIMESEQUAL      reduce using rule 56 (transition -> id_or_integer dotexpr .)
    MINUSEQUAL      reduce using rule 56 (transition -> id_or_integer dotexpr .)
    PLUSEQUAL       reduce using rule 56 (transition -> id_or_integer dotexpr .)
    EQUAL           reduce using rule 56 (transition -> id_or_integer dotexpr .)
    NEWLINE         reduce using rule 56 (transition -> id_or_integer dotexpr .)
    $end            reduce using rule 56 (transition -> id_or_integer dotexpr .)


state 118

    (88) while_statement -> WHILE LPAREN expr_comp RPAREN . NEWLINE statement_set LOOP
    NEWLINE         shift and go to state 143


state 119

    (65) expr_comp -> expression EQUAL . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 144
    id_or_integer                  shift and go to state 50

state 120

    (66) expr_comp -> expression NE . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 145
    id_or_integer                  shift and go to state 50

state 121

    (67) expr_comp -> expression GE . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 146
    id_or_integer                  shift and go to state 50

state 122

    (68) expr_comp -> expression GT . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 147
    id_or_integer                  shift and go to state 50

state 123

    (69) expr_comp -> expression LE . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 148
    id_or_integer                  shift and go to state 50

state 124

    (70) expr_comp -> expression LT . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 149
    id_or_integer                  shift and go to state 50

state 125

    (89) for_statement -> FOR id_or_integer EQUAL expression . TO expression NEWLINE statement_set NEXT
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    TO              shift and go to state 150
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 126

    (90) doneif_statement -> DONEIF LPAREN expr_comp RPAREN .
    NEWLINE         reduce using rule 90 (doneif_statement -> DONEIF LPAREN expr_comp RPAREN .)
    $end            reduce using rule 90 (doneif_statement -> DONEIF LPAREN expr_comp RPAREN .)


state 127

    (78) if_statement -> IF LPAREN expr_comp RPAREN . THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    THEN            shift and go to state 151


state 128

    (34) declaration -> VAR id_or_integer AS STRING .
    NEWLINE         reduce using rule 34 (declaration -> VAR id_or_integer AS STRING .)
    $end            reduce using rule 34 (declaration -> VAR id_or_integer AS STRING .)


state 129

    (35) declaration -> VAR id_or_integer AS NUMBER .
    NEWLINE         reduce using rule 35 (declaration -> VAR id_or_integer AS NUMBER .)
    $end            reduce using rule 35 (declaration -> VAR id_or_integer AS NUMBER .)


state 130

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional . _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (100) _6_sortas_clause_optional -> . sortas_clause
    (101) _6_sortas_clause_optional -> .
    (123) sortas_clause -> . SORTAS id_or_integer
    NEWLINE         reduce using rule 101 (_6_sortas_clause_optional -> .)
    SORTAS          shift and go to state 154

    _6_sortas_clause_optional      shift and go to state 152
    sortas_clause                  shift and go to state 153

state 131

    (98) _5_where_clause_optional -> where_clause .
    SORTAS          reduce using rule 98 (_5_where_clause_optional -> where_clause .)
    NEWLINE         reduce using rule 98 (_5_where_clause_optional -> where_clause .)


state 132

    (122) where_clause -> WHERE . tag_expression
    (128) tag_expression -> . tag_simple_term
    (125) tag_simple_term -> . tag_template
    (126) tag_simple_term -> . FALSE
    (127) tag_simple_term -> . TRUE
    (124) tag_template -> . id_or_integer DOT TAG
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    FALSE           shift and go to state 158
    TRUE            shift and go to state 159
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    tag_expression                 shift and go to state 155
    tag_simple_term                shift and go to state 156
    tag_template                   shift and go to state 157
    id_or_integer                  shift and go to state 160

state 133

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional . _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (105) _8_sortas_clause_optional -> . sortas_clause
    (106) _8_sortas_clause_optional -> .
    (123) sortas_clause -> . SORTAS id_or_integer
    NEWLINE         reduce using rule 106 (_8_sortas_clause_optional -> .)
    SORTAS          shift and go to state 154

    _8_sortas_clause_optional      shift and go to state 161
    sortas_clause                  shift and go to state 162

state 134

    (103) _7_where_clause_optional -> where_clause .
    SORTAS          reduce using rule 103 (_7_where_clause_optional -> where_clause .)
    NEWLINE         reduce using rule 103 (_7_where_clause_optional -> where_clause .)


state 135

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional . _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (110) _10_sortas_clause_optional -> . sortas_clause
    (111) _10_sortas_clause_optional -> .
    (123) sortas_clause -> . SORTAS id_or_integer
    NEWLINE         reduce using rule 111 (_10_sortas_clause_optional -> .)
    SORTAS          shift and go to state 154

    _10_sortas_clause_optional     shift and go to state 163
    sortas_clause                  shift and go to state 164

state 136

    (108) _9_where_clause_optional -> where_clause .
    SORTAS          reduce using rule 108 (_9_where_clause_optional -> where_clause .)
    NEWLINE         reduce using rule 108 (_9_where_clause_optional -> where_clause .)


state 137

    (112) foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional . _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (115) _12_sortas_clause_optional -> . sortas_clause
    (116) _12_sortas_clause_optional -> .
    (123) sortas_clause -> . SORTAS id_or_integer
    NEWLINE         reduce using rule 116 (_12_sortas_clause_optional -> .)
    SORTAS          shift and go to state 154

    _12_sortas_clause_optional     shift and go to state 165
    sortas_clause                  shift and go to state 166

state 138

    (113) _11_where_clause_optional -> where_clause .
    SORTAS          reduce using rule 113 (_11_where_clause_optional -> where_clause .)
    NEWLINE         reduce using rule 113 (_11_where_clause_optional -> where_clause .)


state 139

    (117) foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional . _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (120) _14_sortas_clause_optional -> . sortas_clause
    (121) _14_sortas_clause_optional -> .
    (123) sortas_clause -> . SORTAS id_or_integer
    NEWLINE         reduce using rule 121 (_14_sortas_clause_optional -> .)
    SORTAS          shift and go to state 154

    _14_sortas_clause_optional     shift and go to state 167
    sortas_clause                  shift and go to state 168

state 140

    (118) _13_where_clause_optional -> where_clause .
    SORTAS          reduce using rule 118 (_13_where_clause_optional -> where_clause .)
    NEWLINE         reduce using rule 118 (_13_where_clause_optional -> where_clause .)


state 141

    (55) transition -> id_or_integer LSQUARE paramlist . RSQUARE dotexpr
    (57) transition -> id_or_integer LSQUARE paramlist . RSQUARE
    RSQUARE         shift and go to state 169


state 142

    (59) paramlist -> expression . _2_COMMA_expression_repeat
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    (60) _2_COMMA_expression_repeat -> . _2_COMMA_expression_items
    (61) _2_COMMA_expression_repeat -> .
    (62) _2_COMMA_expression_items -> . _2_COMMA_expression_items _2_COMMA_expression_item
    (63) _2_COMMA_expression_items -> . _2_COMMA_expression_item
    (64) _2_COMMA_expression_item -> . COMMA expression
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81
    RSQUARE         reduce using rule 61 (_2_COMMA_expression_repeat -> .)
    COMMA           shift and go to state 173

    _2_COMMA_expression_repeat     shift and go to state 170
    _2_COMMA_expression_items      shift and go to state 171
    _2_COMMA_expression_item       shift and go to state 172

state 143

    (88) while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE . statement_set LOOP
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 174
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 144

    (65) expr_comp -> expression EQUAL expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 65 (expr_comp -> expression EQUAL expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 145

    (66) expr_comp -> expression NE expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 66 (expr_comp -> expression NE expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 146

    (67) expr_comp -> expression GE expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 67 (expr_comp -> expression GE expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 147

    (68) expr_comp -> expression GT expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 68 (expr_comp -> expression GT expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 148

    (69) expr_comp -> expression LE expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 69 (expr_comp -> expression LE expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 149

    (70) expr_comp -> expression LT expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    RPAREN          reduce using rule 70 (expr_comp -> expression LT expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 150

    (89) for_statement -> FOR id_or_integer EQUAL expression TO . expression NEWLINE statement_set NEXT
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 50
    expression                     shift and go to state 176

state 151

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN . NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    NEWLINE         shift and go to state 177


state 152

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional . NEWLINE statement_set NEXTEACH
    NEWLINE         shift and go to state 178


state 153

    (100) _6_sortas_clause_optional -> sortas_clause .
    NEWLINE         reduce using rule 100 (_6_sortas_clause_optional -> sortas_clause .)


state 154

    (123) sortas_clause -> SORTAS . id_or_integer
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    id_or_integer                  shift and go to state 179

state 155

    (122) where_clause -> WHERE tag_expression .
    SORTAS          reduce using rule 122 (where_clause -> WHERE tag_expression .)
    NEWLINE         reduce using rule 122 (where_clause -> WHERE tag_expression .)


state 156

    (128) tag_expression -> tag_simple_term .
    SORTAS          reduce using rule 128 (tag_expression -> tag_simple_term .)
    NEWLINE         reduce using rule 128 (tag_expression -> tag_simple_term .)


state 157

    (125) tag_simple_term -> tag_template .
    SORTAS          reduce using rule 125 (tag_simple_term -> tag_template .)
    NEWLINE         reduce using rule 125 (tag_simple_term -> tag_template .)


state 158

    (126) tag_simple_term -> FALSE .
    SORTAS          reduce using rule 126 (tag_simple_term -> FALSE .)
    NEWLINE         reduce using rule 126 (tag_simple_term -> FALSE .)


state 159

    (127) tag_simple_term -> TRUE .
    SORTAS          reduce using rule 127 (tag_simple_term -> TRUE .)
    NEWLINE         reduce using rule 127 (tag_simple_term -> TRUE .)


state 160

    (124) tag_template -> id_or_integer . DOT TAG
    DOT             shift and go to state 180


state 161

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional . NEWLINE statement_set NEXTEACH
    NEWLINE         shift and go to state 181


state 162

    (105) _8_sortas_clause_optional -> sortas_clause .
    NEWLINE         reduce using rule 105 (_8_sortas_clause_optional -> sortas_clause .)


state 163

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional . NEWLINE statement_set NEXTEACH
    NEWLINE         shift and go to state 182


state 164

    (110) _10_sortas_clause_optional -> sortas_clause .
    NEWLINE         reduce using rule 110 (_10_sortas_clause_optional -> sortas_clause .)


state 165

    (112) foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional . NEWLINE statement_set NEXTEACH
    NEWLINE         shift and go to state 183


state 166

    (115) _12_sortas_clause_optional -> sortas_clause .
    NEWLINE         reduce using rule 115 (_12_sortas_clause_optional -> sortas_clause .)


state 167

    (117) foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional . NEWLINE statement_set NEXTEACH
    NEWLINE         shift and go to state 184


state 168

    (120) _14_sortas_clause_optional -> sortas_clause .
    NEWLINE         reduce using rule 120 (_14_sortas_clause_optional -> sortas_clause .)


state 169

    (55) transition -> id_or_integer LSQUARE paramlist RSQUARE . dotexpr
    (57) transition -> id_or_integer LSQUARE paramlist RSQUARE .
    (54) dotexpr -> . DOT transition
    CONCATEQUAL     reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    MODEQUAL        reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    DIVIDEEQUAL     reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    TIMESEQUAL      reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    MINUSEQUAL      reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    PLUSEQUAL       reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    EQUAL           reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    NEWLINE         reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    $end            reduce using rule 57 (transition -> id_or_integer LSQUARE paramlist RSQUARE .)
    DOT             shift and go to state 61

    dotexpr                        shift and go to state 185

state 170

    (59) paramlist -> expression _2_COMMA_expression_repeat .
    RSQUARE         reduce using rule 59 (paramlist -> expression _2_COMMA_expression_repeat .)


state 171

    (60) _2_COMMA_expression_repeat -> _2_COMMA_expression_items .
    (62) _2_COMMA_expression_items -> _2_COMMA_expression_items . _2_COMMA_expression_item
    (64) _2_COMMA_expression_item -> . COMMA expression
    RSQUARE         reduce using rule 60 (_2_COMMA_expression_repeat -> _2_COMMA_expression_items .)
    COMMA           shift and go to state 173

    _2_COMMA_expression_item       shift and go to state 186

state 172

    (63) _2_COMMA_expression_items -> _2_COMMA_expression_item .
    COMMA           reduce using rule 63 (_2_COMMA_expression_items -> _2_COMMA_expression_item .)
    RSQUARE         reduce using rule 63 (_2_COMMA_expression_items -> _2_COMMA_expression_item .)


state 173

    (64) _2_COMMA_expression_item -> COMMA . expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expression                     shift and go to state 187
    id_or_integer                  shift and go to state 50

state 174

    (88) while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE statement_set . LOOP
    LOOP            shift and go to state 188


state 175

    (7) statement_set -> statement . NEWLINE _1_statement_NEWLINE_repeat
    NEWLINE         shift and go to state 189


state 176

    (89) for_statement -> FOR id_or_integer EQUAL expression TO expression . NEWLINE statement_set NEXT
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    NEWLINE         shift and go to state 190
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 177

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE . statement_set _3_elsif_statement_repeat optional_else ENDIF
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 191
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 178

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE . statement_set NEXTEACH
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 192
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 179

    (123) sortas_clause -> SORTAS id_or_integer .
    NEWLINE         reduce using rule 123 (sortas_clause -> SORTAS id_or_integer .)


state 180

    (124) tag_template -> id_or_integer DOT . TAG
    TAG             shift and go to state 193


state 181

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE . statement_set NEXTEACH
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    id_or_integer                  shift and go to state 32
    statement_set                  shift and go to state 194
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    reference                      shift and go to state 37

state 182

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE . statement_set NEXTEACH
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 195
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 183

    (112) foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE . statement_set NEXTEACH
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    id_or_integer                  shift and go to state 32
    statement_set                  shift and go to state 196
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    reference                      shift and go to state 37

state 184

    (117) foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE . statement_set NEXTEACH
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    id_or_integer                  shift and go to state 32
    statement_set                  shift and go to state 197
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    reference                      shift and go to state 37

state 185

    (55) transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .
    CONCATEQUAL     reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    MODEQUAL        reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    DIVIDEEQUAL     reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    TIMESEQUAL      reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    MINUSEQUAL      reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    PLUSEQUAL       reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    EQUAL           reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    NEWLINE         reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)
    $end            reduce using rule 55 (transition -> id_or_integer LSQUARE paramlist RSQUARE dotexpr .)


state 186

    (62) _2_COMMA_expression_items -> _2_COMMA_expression_items _2_COMMA_expression_item .
    COMMA           reduce using rule 62 (_2_COMMA_expression_items -> _2_COMMA_expression_items _2_COMMA_expression_item .)
    RSQUARE         reduce using rule 62 (_2_COMMA_expression_items -> _2_COMMA_expression_items _2_COMMA_expression_item .)


state 187

    (64) _2_COMMA_expression_item -> COMMA expression .
    (44) expression -> expression . CONCAT expression
    (45) expression -> expression . MOD expression
    (46) expression -> expression . DIVIDE expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . MINUS expression
    (49) expression -> expression . PLUS expression
    COMMA           reduce using rule 64 (_2_COMMA_expression_item -> COMMA expression .)
    RSQUARE         reduce using rule 64 (_2_COMMA_expression_item -> COMMA expression .)
    CONCAT          shift and go to state 76
    MOD             shift and go to state 77
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 188

    (88) while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP .
    NEWLINE         reduce using rule 88 (while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP .)
    $end            reduce using rule 88 (while_statement -> WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP .)


state 189

    (7) statement_set -> statement NEWLINE . _1_statement_NEWLINE_repeat
    (8) _1_statement_NEWLINE_repeat -> . _1_statement_NEWLINE_items
    (9) _1_statement_NEWLINE_repeat -> .
    (10) _1_statement_NEWLINE_items -> . _1_statement_NEWLINE_items _1_statement_NEWLINE_item
    (11) _1_statement_NEWLINE_items -> . _1_statement_NEWLINE_item
    (12) _1_statement_NEWLINE_item -> . statement NEWLINE
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    LOOP            reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    ELSIF           reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    ELSE            reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    ENDIF           reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    NEXTEACH        reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    NEXT            reduce using rule 9 (_1_statement_NEWLINE_repeat -> .)
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement                      shift and go to state 198
    _1_statement_NEWLINE_repeat    shift and go to state 199
    _1_statement_NEWLINE_items     shift and go to state 200
    _1_statement_NEWLINE_item      shift and go to state 201
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 190

    (89) for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE . statement_set NEXT
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    id_or_integer                  shift and go to state 32
    statement_set                  shift and go to state 202
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    reference                      shift and go to state 37

state 191

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set . _3_elsif_statement_repeat optional_else ENDIF
    (79) _3_elsif_statement_repeat -> . _3_elsif_statement_items
    (80) _3_elsif_statement_repeat -> .
    (81) _3_elsif_statement_items -> . _3_elsif_statement_items _3_elsif_statement_item
    (82) _3_elsif_statement_items -> . _3_elsif_statement_item
    (83) _3_elsif_statement_item -> . elsif_statement
    (87) elsif_statement -> . ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set
    ELSE            reduce using rule 80 (_3_elsif_statement_repeat -> .)
    ENDIF           reduce using rule 80 (_3_elsif_statement_repeat -> .)
    ELSIF           shift and go to state 207

    _3_elsif_statement_repeat      shift and go to state 203
    _3_elsif_statement_items       shift and go to state 204
    _3_elsif_statement_item        shift and go to state 205
    elsif_statement                shift and go to state 206

state 192

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set . NEXTEACH
    NEXTEACH        shift and go to state 208


state 193

    (124) tag_template -> id_or_integer DOT TAG .
    SORTAS          reduce using rule 124 (tag_template -> id_or_integer DOT TAG .)
    NEWLINE         reduce using rule 124 (tag_template -> id_or_integer DOT TAG .)


state 194

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set . NEXTEACH
    NEXTEACH        shift and go to state 209


state 195

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set . NEXTEACH
    NEXTEACH        shift and go to state 210


state 196

    (112) foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set . NEXTEACH
    NEXTEACH        shift and go to state 211


state 197

    (117) foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set . NEXTEACH
    NEXTEACH        shift and go to state 212


state 198

    (12) _1_statement_NEWLINE_item -> statement . NEWLINE
    NEWLINE         shift and go to state 213


state 199

    (7) statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .
    LOOP            reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)
    ELSIF           reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)
    ELSE            reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)
    ENDIF           reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)
    NEXTEACH        reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)
    NEXT            reduce using rule 7 (statement_set -> statement NEWLINE _1_statement_NEWLINE_repeat .)


state 200

    (8) _1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .
    (10) _1_statement_NEWLINE_items -> _1_statement_NEWLINE_items . _1_statement_NEWLINE_item
    (12) _1_statement_NEWLINE_item -> . statement NEWLINE
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    LOOP            reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    ELSIF           reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    ELSE            reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    ENDIF           reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    NEXTEACH        reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    NEXT            reduce using rule 8 (_1_statement_NEWLINE_repeat -> _1_statement_NEWLINE_items .)
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    _1_statement_NEWLINE_item      shift and go to state 214
    statement                      shift and go to state 198
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 201

    (11) _1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .
    DONE            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    PERFORM         reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    APPEND          reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    TRUSTME         reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    DEBUG           reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    NOTIFY          reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    FOREACH         reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    WHILE           reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    FOR             reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    DONEIF          reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    GOTO            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    IF              reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    VAR             reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    COMMENT         reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    INTEGER         reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    ID              reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    THIS            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    LOOP            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    ELSIF           reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    ELSE            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    ENDIF           reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    NEXTEACH        reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)
    NEXT            reduce using rule 11 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_item .)


state 202

    (89) for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set . NEXT
    NEXT            shift and go to state 215


state 203

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat . optional_else ENDIF
    (84) optional_else -> . _4_ELSE_NEWLINE_statement_set_optional
    (85) _4_ELSE_NEWLINE_statement_set_optional -> . ELSE NEWLINE statement_set
    (86) _4_ELSE_NEWLINE_statement_set_optional -> .
    ELSE            shift and go to state 218
    ENDIF           reduce using rule 86 (_4_ELSE_NEWLINE_statement_set_optional -> .)

    optional_else                  shift and go to state 216
    _4_ELSE_NEWLINE_statement_set_optional shift and go to state 217

state 204

    (79) _3_elsif_statement_repeat -> _3_elsif_statement_items .
    (81) _3_elsif_statement_items -> _3_elsif_statement_items . _3_elsif_statement_item
    (83) _3_elsif_statement_item -> . elsif_statement
    (87) elsif_statement -> . ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set
    ELSE            reduce using rule 79 (_3_elsif_statement_repeat -> _3_elsif_statement_items .)
    ENDIF           reduce using rule 79 (_3_elsif_statement_repeat -> _3_elsif_statement_items .)
    ELSIF           shift and go to state 207

    _3_elsif_statement_item        shift and go to state 219
    elsif_statement                shift and go to state 206

state 205

    (82) _3_elsif_statement_items -> _3_elsif_statement_item .
    ELSIF           reduce using rule 82 (_3_elsif_statement_items -> _3_elsif_statement_item .)
    ELSE            reduce using rule 82 (_3_elsif_statement_items -> _3_elsif_statement_item .)
    ENDIF           reduce using rule 82 (_3_elsif_statement_items -> _3_elsif_statement_item .)


state 206

    (83) _3_elsif_statement_item -> elsif_statement .
    ELSIF           reduce using rule 83 (_3_elsif_statement_item -> elsif_statement .)
    ELSE            reduce using rule 83 (_3_elsif_statement_item -> elsif_statement .)
    ENDIF           reduce using rule 83 (_3_elsif_statement_item -> elsif_statement .)


state 207

    (87) elsif_statement -> ELSIF . LPAREN expr_comp RPAREN THEN NEWLINE statement_set
    LPAREN          shift and go to state 220


state 208

    (97) foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH .
    NEWLINE         reduce using rule 97 (foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH .)
    $end            reduce using rule 97 (foreach_statement -> FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH .)


state 209

    (102) foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH .
    NEWLINE         reduce using rule 102 (foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH .)
    $end            reduce using rule 102 (foreach_statement -> FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH .)


state 210

    (107) foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH .
    NEWLINE         reduce using rule 107 (foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH .)
    $end            reduce using rule 107 (foreach_statement -> FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH .)


state 211

    (112) foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH .
    NEWLINE         reduce using rule 112 (foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH .)
    $end            reduce using rule 112 (foreach_statement -> FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH .)


state 212

    (117) foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH .
    NEWLINE         reduce using rule 117 (foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH .)
    $end            reduce using rule 117 (foreach_statement -> FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH .)


state 213

    (12) _1_statement_NEWLINE_item -> statement NEWLINE .
    DONE            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    PERFORM         reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    APPEND          reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    TRUSTME         reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    DEBUG           reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    NOTIFY          reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    FOREACH         reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    WHILE           reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    FOR             reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    DONEIF          reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    GOTO            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    IF              reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    VAR             reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    COMMENT         reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    INTEGER         reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    ID              reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    THIS            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    LOOP            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    ELSIF           reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    ELSE            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    ENDIF           reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    NEXTEACH        reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)
    NEXT            reduce using rule 12 (_1_statement_NEWLINE_item -> statement NEWLINE .)


state 214

    (10) _1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .
    DONE            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    PERFORM         reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    APPEND          reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    TRUSTME         reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    DEBUG           reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    NOTIFY          reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    FOREACH         reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    WHILE           reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    FOR             reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    DONEIF          reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    GOTO            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    IF              reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    VAR             reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    COMMENT         reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    INTEGER         reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    ID              reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    THIS            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    LOOP            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    ELSIF           reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    ELSE            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    ENDIF           reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    NEXTEACH        reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)
    NEXT            reduce using rule 10 (_1_statement_NEWLINE_items -> _1_statement_NEWLINE_items _1_statement_NEWLINE_item .)


state 215

    (89) for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT .
    NEWLINE         reduce using rule 89 (for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT .)
    $end            reduce using rule 89 (for_statement -> FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT .)


state 216

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else . ENDIF
    ENDIF           shift and go to state 221


state 217

    (84) optional_else -> _4_ELSE_NEWLINE_statement_set_optional .
    ENDIF           reduce using rule 84 (optional_else -> _4_ELSE_NEWLINE_statement_set_optional .)


state 218

    (85) _4_ELSE_NEWLINE_statement_set_optional -> ELSE . NEWLINE statement_set
    NEWLINE         shift and go to state 222


state 219

    (81) _3_elsif_statement_items -> _3_elsif_statement_items _3_elsif_statement_item .
    ELSIF           reduce using rule 81 (_3_elsif_statement_items -> _3_elsif_statement_items _3_elsif_statement_item .)
    ELSE            reduce using rule 81 (_3_elsif_statement_items -> _3_elsif_statement_items _3_elsif_statement_item .)
    ENDIF           reduce using rule 81 (_3_elsif_statement_items -> _3_elsif_statement_items _3_elsif_statement_item .)


state 220

    (87) elsif_statement -> ELSIF LPAREN . expr_comp RPAREN THEN NEWLINE statement_set
    (65) expr_comp -> . expression EQUAL expression
    (66) expr_comp -> . expression NE expression
    (67) expr_comp -> . expression GE expression
    (68) expr_comp -> . expression GT expression
    (69) expr_comp -> . expression LE expression
    (70) expr_comp -> . expression LT expression
    (38) expression -> . SPEC_SYMBOL
    (39) expression -> . SCONST
    (40) expression -> . FLOAT
    (41) expression -> . id_or_integer
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . expression CONCAT expression
    (45) expression -> . expression MOD expression
    (46) expression -> . expression DIVIDE expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . expression PLUS expression
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    SPEC_SYMBOL     shift and go to state 47
    SCONST          shift and go to state 48
    FLOAT           shift and go to state 49
    MINUS           shift and go to state 51
    LPAREN          shift and go to state 52
    INTEGER         shift and go to state 42
    ID              shift and go to state 43

    expr_comp                      shift and go to state 223
    expression                     shift and go to state 91
    id_or_integer                  shift and go to state 50

state 221

    (78) if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF .
    NEWLINE         reduce using rule 78 (if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF .)
    $end            reduce using rule 78 (if_statement -> IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF .)


state 222

    (85) _4_ELSE_NEWLINE_statement_set_optional -> ELSE NEWLINE . statement_set
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 224
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 223

    (87) elsif_statement -> ELSIF LPAREN expr_comp . RPAREN THEN NEWLINE statement_set
    RPAREN          shift and go to state 225


state 224

    (85) _4_ELSE_NEWLINE_statement_set_optional -> ELSE NEWLINE statement_set .
    ENDIF           reduce using rule 85 (_4_ELSE_NEWLINE_statement_set_optional -> ELSE NEWLINE statement_set .)


state 225

    (87) elsif_statement -> ELSIF LPAREN expr_comp RPAREN . THEN NEWLINE statement_set
    THEN            shift and go to state 226


state 226

    (87) elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN . NEWLINE statement_set
    NEWLINE         shift and go to state 227


state 227

    (87) elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE . statement_set
    (7) statement_set -> . statement NEWLINE _1_statement_NEWLINE_repeat
    (13) statement -> . done_statement
    (14) statement -> . perform_statement
    (15) statement -> . append_statement
    (16) statement -> . trustme_statement
    (17) statement -> . debug_statement
    (18) statement -> . notify_statement
    (19) statement -> . foreach_statement
    (20) statement -> . while_statement
    (21) statement -> . for_statement
    (22) statement -> . doneif_statement
    (23) statement -> . binop_assign
    (24) statement -> . goto_statement
    (25) statement -> . if_statement
    (26) statement -> . assignment
    (27) statement -> . declaration
    (28) statement -> . label
    (29) statement -> . comment
    (94) done_statement -> . DONE
    (91) perform_statement -> . PERFORM field_ref
    (92) append_statement -> . APPEND expression
    (93) trustme_statement -> . TRUSTME
    (96) debug_statement -> . DEBUG expression
    (95) notify_statement -> . NOTIFY expression
    (97) foreach_statement -> . FOREACH ACTOR IN PORTFOLIO _5_where_clause_optional _6_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (102) foreach_statement -> . FOREACH BOOTSTRAP IN id_or_integer _7_where_clause_optional _8_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (107) foreach_statement -> . FOREACH BOOTSTRAP IN THIS _9_where_clause_optional _10_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (112) foreach_statement -> . FOREACH THING IN id_or_integer _11_where_clause_optional _12_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (117) foreach_statement -> . FOREACH PICK IN id_or_integer _13_where_clause_optional _14_sortas_clause_optional NEWLINE statement_set NEXTEACH
    (88) while_statement -> . WHILE LPAREN expr_comp RPAREN NEWLINE statement_set LOOP
    (89) for_statement -> . FOR id_or_integer EQUAL expression TO expression NEWLINE statement_set NEXT
    (90) doneif_statement -> . DONEIF LPAREN expr_comp RPAREN
    (71) binop_assign -> . reference CONCATEQUAL expression
    (72) binop_assign -> . reference MODEQUAL expression
    (73) binop_assign -> . reference DIVIDEEQUAL expression
    (74) binop_assign -> . reference TIMESEQUAL expression
    (75) binop_assign -> . reference MINUSEQUAL expression
    (76) binop_assign -> . reference PLUSEQUAL expression
    (77) goto_statement -> . GOTO id_or_integer
    (78) if_statement -> . IF LPAREN expr_comp RPAREN THEN NEWLINE statement_set _3_elsif_statement_repeat optional_else ENDIF
    (36) assignment -> . reference EQUAL error
    (37) assignment -> . reference EQUAL expression
    (34) declaration -> . VAR id_or_integer AS STRING
    (35) declaration -> . VAR id_or_integer AS NUMBER
    (33) label -> . id_or_integer COLON
    (30) comment -> . COMMENT
    (50) reference -> . id_or_integer
    (51) reference -> . field_ref
    (31) id_or_integer -> . INTEGER
    (32) id_or_integer -> . ID
    (52) field_ref -> . id_or_integer dotexpr
    (53) field_ref -> . THIS dotexpr
    DONE            shift and go to state 24
    PERFORM         shift and go to state 25
    APPEND          shift and go to state 27
    TRUSTME         shift and go to state 28
    DEBUG           shift and go to state 29
    NOTIFY          shift and go to state 30
    FOREACH         shift and go to state 31
    WHILE           shift and go to state 34
    FOR             shift and go to state 35
    DONEIF          shift and go to state 36
    GOTO            shift and go to state 38
    IF              shift and go to state 39
    VAR             shift and go to state 40
    COMMENT         shift and go to state 41
    INTEGER         shift and go to state 42
    ID              shift and go to state 43
    THIS            shift and go to state 33

    statement_set                  shift and go to state 228
    statement                      shift and go to state 175
    done_statement                 shift and go to state 7
    perform_statement              shift and go to state 8
    append_statement               shift and go to state 9
    trustme_statement              shift and go to state 10
    debug_statement                shift and go to state 11
    notify_statement               shift and go to state 12
    foreach_statement              shift and go to state 13
    while_statement                shift and go to state 14
    for_statement                  shift and go to state 15
    doneif_statement               shift and go to state 16
    binop_assign                   shift and go to state 17
    goto_statement                 shift and go to state 18
    if_statement                   shift and go to state 19
    assignment                     shift and go to state 20
    declaration                    shift and go to state 21
    label                          shift and go to state 22
    comment                        shift and go to state 23
    field_ref                      shift and go to state 26
    id_or_integer                  shift and go to state 32
    reference                      shift and go to state 37

state 228

    (87) elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set .
    ELSIF           reduce using rule 87 (elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set .)
    ELSE            reduce using rule 87 (elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set .)
    ENDIF           reduce using rule 87 (elsif_statement -> ELSIF LPAREN expr_comp RPAREN THEN NEWLINE statement_set .)
